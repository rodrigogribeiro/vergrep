
==================== FINAL INTERFACE ====================
2017-12-30 18:23:55.88755 UTC

interface main:Bool 8022
  interface hash: 45baab54d4f7bf66cbd62e571c266536
  ABI hash: 7f49639da31bf68d84891fbb72f4329f
  export-list hash: 8d5fa99d6f80f6f1806167355128b5e0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 070ecf0bbcbbbb93370072c3b472ea02
  sig of: Nothing
  used TH splices: False
  where
exports:
  Bool.bool_dec
module dependencies: Datatypes
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  Datatypes 56e7d59897d249a1401a71556e85298a
  exports: 3507821e53caa7bf76ecc40e8e3830d1
  bool_rec 353625d956cf1fc1251c11dc2231bc7f
5824ac295b2101afca60ba5e7cd8bb70
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Bool.$trModule3 Bool.$trModule1) -}
41da008b9aef90fcf6cc2bba79d9df64
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Bool.$trModule2) -}
6035f0734acc9040873aa1157eeb91a0
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bool"#) -}
0f13404c6ce8ca3bc6fe37732eb3a2e2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Bool.$trModule4) -}
e7c1bdf54d8f6a5e338d2e5dce9e8713
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
e4c8a815c2a35d06b88203055844cadf
  bool_dec :: GHC.Types.Bool -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (b1 :: GHC.Types.Bool) (b2 :: GHC.Types.Bool) ->
                 case b1 of wild {
                   GHC.Types.False
                   -> case b2 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True -> b2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

