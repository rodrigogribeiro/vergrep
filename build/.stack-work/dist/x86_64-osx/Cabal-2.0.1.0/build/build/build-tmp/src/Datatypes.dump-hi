
==================== FINAL INTERFACE ====================
2017-12-30 18:23:55.799819 UTC

interface main:Datatypes 8022
  interface hash: 37f18608e0c8e86286f13f700797c015
  ABI hash: 56e7d59897d249a1401a71556e85298a
  export-list hash: 3507821e53caa7bf76ecc40e8e3830d1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 070ecf0bbcbbbb93370072c3b472ea02
  sig of: Nothing
  used TH splices: False
  where
exports:
  Datatypes.bool_rec
  Datatypes.bool_rect
  Datatypes.list_rec
  Datatypes.list_rect
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
5abe58cf879701239a073900904edc85
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Datatypes.$trModule3
                   Datatypes.$trModule1) -}
4a9644c59c01c2e03ff96387a78b05e5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Datatypes.$trModule2) -}
4937b88819ea968d4d06089eaed152ee
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Datatypes"#) -}
d62d858926a493901b677b9b49f63576
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Datatypes.$trModule4) -}
6eecdda334a058a8862ea5c78050d786
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
353625d956cf1fc1251c11dc2231bc7f
  bool_rec :: a1 -> a1 -> GHC.Types.Bool -> a1
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True) Datatypes.bool_rect -}
94c69a871e67f0a295d8b6653d664622
  bool_rect :: a1 -> a1 -> GHC.Types.Bool -> a1
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1 (f :: a1) (f0 :: a1) (b :: GHC.Types.Bool) ->
                 case b of wild { GHC.Types.False -> f0 GHC.Types.True -> f }) -}
170da3927c1341c25fd6086e9f9b12f4
  list_rec :: a2 -> (a1 -> [a1] -> a2 -> a2) -> [a1] -> a2
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,C(C1(C1(U)))><S,1*U>,
     Unfolding: InlineRule (0, True, True) Datatypes.list_rect -}
def6060bc67c1c8ac0820f7aa5296bda
  list_rect :: a2 -> (a1 -> [a1] -> a2 -> a2) -> [a1] -> a2
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U><L,C(C1(C1(U)))><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

